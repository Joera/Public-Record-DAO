{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11","program":"/home/joera/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","marine_rs_sdk","--edition=2018","/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"logger\"","-C","metadata=629a1c59bba2f969","-C","extra-filename=-629a1c59bba2f969","--out-dir","/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps","-L","dependency=/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps","--extern","marine_macro=/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps/libmarine_macro-4fec165862f28dfe.so","--extern","marine_rs_sdk_main=/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps/libmarine_rs_sdk_main-09b2e4d67ef2ee38.rmeta","--extern","marine_timestamp_macro=/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps/libmarine_timestamp_macro-c80f309332dc3364.so","--extern","serde=/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps/libserde-e89bdd736f668b54.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/joera/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/joera/Documents/chronicles/fluence/public-record/_prdao_shared/target/rls/debug/deps/libmarine_rs_sdk-629a1c59bba2f969.rmeta"},"prelude":{"crate_id":{"name":"marine_rs_sdk","disambiguator":[14491663169442664290,0]},"crate_root":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src","external_crates":[{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9417449919078001824,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7991207436483685828,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13147863684947445216,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17413671527593355705,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18425583869382939666,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10560525288148554156,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16890908389949680966,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3464348435449062658,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3409829620563602169,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13220756932560393809,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12713897463550181640,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15715601615656598984,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9697042610839248456,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[797386091010757054,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9691476067573251455,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11789788341783666278,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[16177271576889708609,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[1707141240053676430,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[9515964055272837744,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","num":20,"id":{"name":"marine_macro","disambiguator":[11707498271885402780,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","num":21,"id":{"name":"serde","disambiguator":[9124255039909583654,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","num":22,"id":{"name":"serde_derive","disambiguator":[13052295738560609082,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":23,"id":{"name":"marine_rs_sdk_main","disambiguator":[12973790732813601664,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":24,"id":{"name":"log","disambiguator":[2946680441269291464,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[14555037412384624954,0]}},{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","num":26,"id":{"name":"marine_timestamp_macro","disambiguator":[6873596184770681543,0]}}],"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":605,"byte_end":3266,"line_start":17,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":9},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2318,"byte_end":2324,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"marine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":10},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2348,"byte_end":2351,"line_start":78,"line_end":78,"column_start":23,"column_end":26},"alias_span":null,"name":"fce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2379,"byte_end":2393,"line_start":80,"line_end":80,"column_start":26,"column_end":40},"alias_span":null,"name":"CallParameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2420,"byte_end":2437,"line_start":81,"line_end":81,"column_start":26,"column_end":43},"alias_span":null,"name":"SecurityTetraplet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2464,"byte_end":2483,"line_start":82,"line_end":82,"column_start":26,"column_end":45},"alias_span":null,"name":"get_call_parameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":24},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2541,"byte_end":2558,"line_start":85,"line_end":85,"column_start":29,"column_end":46},"alias_span":null,"name":"WasmLoggerBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2615,"byte_end":2624,"line_start":87,"line_end":87,"column_start":29,"column_end":38},"alias_span":null,"name":"TargetMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2651,"byte_end":2670,"line_start":89,"line_end":89,"column_start":25,"column_end":44},"alias_span":null,"name":"MountedBinaryResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2696,"byte_end":2721,"line_start":90,"line_end":90,"column_start":25,"column_end":50},"alias_span":null,"name":"MountedBinaryStringResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2747,"byte_end":2759,"line_start":91,"line_end":91,"column_start":25,"column_end":37},"alias_span":null,"name":"BINARY_SUCCESS_CODE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":55},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2813,"byte_end":2828,"line_start":93,"line_end":93,"column_start":29,"column_end":44},"alias_span":null,"name":"module_manifest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":68},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2995,"byte_end":3009,"line_start":98,"line_end":98,"column_start":33,"column_end":47},"alias_span":null,"name":"get_result_ptr","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":23,"index":69},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":3043,"byte_end":3058,"line_start":99,"line_end":99,"column_start":33,"column_end":48},"alias_span":null,"name":"get_result_size","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":23,"index":70},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":3092,"byte_end":3106,"line_start":100,"line_end":100,"column_start":33,"column_end":47},"alias_span":null,"name":"set_result_ptr","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":23,"index":71},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":3140,"byte_end":3155,"line_start":101,"line_end":101,"column_start":33,"column_end":48},"alias_span":null,"name":"set_result_size","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":23,"index":74},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":3189,"byte_end":3210,"line_start":102,"line_end":102,"column_start":33,"column_end":54},"alias_span":null,"name":"add_object_to_release","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":26,"index":6},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":3248,"byte_end":3263,"line_start":103,"line_end":103,"column_start":37,"column_end":52},"alias_span":null,"name":"build_timestamp","value":"","parent":{"krate":0,"index":66}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":605,"byte_end":3266,"line_start":17,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":14},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66}],"decl_id":null,"docs":" Rust backend SDK for applications on the Fluence network. This crate defines the procedure macro\n `#[marine]` that could be applied to a function, structure or extern block.","sig":null,"attributes":[{"value":"/ Rust backend SDK for applications on the Fluence network. This crate defines the procedure macro","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":605,"byte_end":705,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ `#[marine]` that could be applied to a function, structure or extern block.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":706,"byte_end":785,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":786,"byte_end":789,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Structures with `#[marine]` (hereinafter they'll be called records) could be used then in function","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":790,"byte_end":892,"line_start":20,"line_end":20,"column_start":1,"column_end":103}},{"value":"/ arguments and values. All fields of a record should be public and have one of the","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":893,"byte_end":978,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/ following primitive Rust types","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":979,"byte_end":1013,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ (`bool, u8, u16, u32, u64, i8, i16, i32, i64, f32, f64, String, Vec<u8>`).","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1014,"byte_end":1092,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ ```rust","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1093,"byte_end":1104,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use marine_rs_sdk::marine;","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1105,"byte_end":1135,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1136,"byte_end":1139,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #[marine]","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1140,"byte_end":1153,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ struct T {","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1154,"byte_end":1168,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/     pub field_1: i32,","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1169,"byte_end":1194,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/     pub field_2: Vec<u8>,","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1195,"byte_end":1224,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1225,"byte_end":1230,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1231,"byte_end":1238,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Functions with `#[marine]` will be exported from this module:","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1243,"byte_end":1308,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1309,"byte_end":1312,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1313,"byte_end":1324,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use marine_rs_sdk::marine;","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1325,"byte_end":1355,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #[marine]","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1360,"byte_end":1373,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ pub fn get(url: String) {","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1374,"byte_end":1403,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1404,"byte_end":1418,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1419,"byte_end":1424,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1425,"byte_end":1432,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ At now, such functions could have arguments with primitive Rust types and record and only one","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1433,"byte_end":1530,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ return argument with such type could be used.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1531,"byte_end":1580,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1581,"byte_end":1584,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Finally, to import other wasm modules to your project use similar code:","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1585,"byte_end":1660,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1661,"byte_end":1672,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ use marine_rs_sdk::marine;","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1673,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[marine]","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1708,"byte_end":1721,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/ #[link(wasm_import_module = \"wasm_curl.wasm\")]","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1722,"byte_end":1772,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ extern \"C\" {","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1773,"byte_end":1789,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/     #[link_name = \"get\"]","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1790,"byte_end":1818,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/     pub fn curl_get(url: String) -> String;","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1819,"byte_end":1866,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1867,"byte_end":1872,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1873,"byte_end":1880,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"deny(dead_code, nonstandard_style, unused_imports, unused_mut,\nunused_variables, unused_unsafe, unreachable_patterns)","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":1935,"byte_end":2086,"line_start":59,"line_end":67,"column_start":1,"column_end":3}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2087,"byte_end":2113,"line_start":68,"line_end":68,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4086,"byte_end":4103,"line_start":25,"line_end":25,"column_start":12,"column_end":29},"name":"SecurityTetraplet","qualname":"::call_parameters::SecurityTetraplet","value":"SecurityTetraplet { peer_pk, service_id, function_name, json_path }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Describes an origin that set an argument.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":86},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4114,"byte_end":4121,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"peer_pk","qualname":"::call_parameters::SecurityTetraplet::peer_pk","value":"std::string::String","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4139,"byte_end":4149,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"service_id","qualname":"::call_parameters::SecurityTetraplet::service_id","value":"std::string::String","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":88},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4167,"byte_end":4180,"line_start":28,"line_end":28,"column_start":9,"column_end":22},"name":"function_name","qualname":"::call_parameters::SecurityTetraplet::function_name","value":"std::string::String","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":89},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4198,"byte_end":4207,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"name":"json_path","qualname":"::call_parameters::SecurityTetraplet::json_path","value":"std::string::String","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4391,"byte_end":4405,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"CallParameters","qualname":"::call_parameters::CallParameters","value":"CallParameters { init_peer_id, service_id, service_creator_peer_id, host_id, particle_id, tetraplets }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":" This struct contains parameters that would be accessible by Wasm modules.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4461,"byte_end":4473,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"init_peer_id","qualname":"::call_parameters::CallParameters::init_peer_id","value":"std::string::String","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Peer id of the AIR script initiator.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":158},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4527,"byte_end":4537,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"service_id","qualname":"::call_parameters::CallParameters::service_id","value":"std::string::String","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Id of the current service.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4591,"byte_end":4614,"line_start":43,"line_end":43,"column_start":9,"column_end":32},"name":"service_creator_peer_id","qualname":"::call_parameters::CallParameters::service_creator_peer_id","value":"std::string::String","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Id of the service creator.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4680,"byte_end":4687,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"host_id","qualname":"::call_parameters::CallParameters::host_id","value":"std::string::String","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Id of the host which run this service.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4779,"byte_end":4790,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"particle_id","qualname":"::call_parameters::CallParameters::particle_id","value":"std::string::String","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Id of the particle which execution resulted a call this service.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":4878,"byte_end":4888,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"name":"tetraplets","qualname":"::call_parameters::CallParameters::tetraplets","value":"std::vec::Vec<std::vec::Vec<call_parameters::SecurityTetraplet>>","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Security tetraplets which described origin of the arguments.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":5476,"byte_end":5495,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"get_call_parameters","qualname":"::call_parameters::get_call_parameters","value":"pub fn get_call_parameters() -> CallParameters","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/call_parameters.rs","byte_start":5433,"byte_end":5468,"line_start":67,"line_end":67,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":6466,"byte_end":6478,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"SUCCESS_CODE","qualname":"::mounted_binary::SUCCESS_CODE","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":6630,"byte_end":6649,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"MountedBinaryResult","qualname":"::mounted_binary::MountedBinaryResult","value":"MountedBinaryResult { ret_code, error, stdout, stderr }","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" Describes result of calling a CLI service.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":6757,"byte_end":6765,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"name":"ret_code","qualname":"::mounted_binary::MountedBinaryResult::ret_code","value":"i32","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" Return process exit code or host execution error code, where SUCCESS_CODE means success.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":6866,"byte_end":6871,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"error","qualname":"::mounted_binary::MountedBinaryResult::error","value":"std::string::String","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" Contains the string representation of an error, if ret_code != SUCCESS_CODE.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":6941,"byte_end":6947,"line_start":35,"line_end":35,"column_start":9,"column_end":15},"name":"stdout","qualname":"::mounted_binary::MountedBinaryResult::stdout","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The data that the process wrote to stdout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7018,"byte_end":7024,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"stderr","qualname":"::mounted_binary::MountedBinaryResult::stderr","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The data that the process wrote to stderr.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7212,"byte_end":7237,"line_start":44,"line_end":44,"column_start":12,"column_end":37},"name":"MountedBinaryStringResult","qualname":"::mounted_binary::MountedBinaryStringResult","value":"MountedBinaryStringResult { ret_code, error, stdout, stderr }","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"decl_id":null,"docs":" The same as the MountedBinaryResult, but stdout and stderr are utf8 strings.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7345,"byte_end":7353,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"ret_code","qualname":"::mounted_binary::MountedBinaryStringResult::ret_code","value":"i32","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Return process exit code or host execution error code, where SUCCESS_CODE means success.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":306},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7454,"byte_end":7459,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"error","qualname":"::mounted_binary::MountedBinaryStringResult::error","value":"std::string::String","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Contains the string representation of an error, if ret_code != SUCCESS_CODE.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":307},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7529,"byte_end":7535,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"stdout","qualname":"::mounted_binary::MountedBinaryStringResult::stdout","value":"std::string::String","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The data that the process wrote to stdout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":308},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7605,"byte_end":7611,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"stderr","qualname":"::mounted_binary::MountedBinaryStringResult::stderr","value":"std::string::String","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" The data that the process wrote to stderr.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7739,"byte_end":7749,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_error","qualname":"<MountedBinaryResult>::from_error","value":"pub fn from_error<impl Into<String>: Into<String>>(i32, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new failure MountedBinaryResult from the provided ret_code.\n","sig":null,"attributes":[{"value":"/ Create a new failure MountedBinaryResult from the provided ret_code.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7655,"byte_end":7727,"line_start":59,"line_end":59,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8045,"byte_end":8055,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"is_success","qualname":"<MountedBinaryResult>::is_success","value":"pub fn is_success(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true, if this Result represents a success result, otherwise false.\n","sig":null,"attributes":[{"value":"/ Return true, if this Result represents a success result, otherwise false.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7956,"byte_end":8033,"line_start":69,"line_end":69,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8423,"byte_end":8431,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"into_std","qualname":"<MountedBinaryResult>::into_std","value":"pub fn into_std(Self) -> Option<std::result::Result<String, String>>","parent":null,"children":[],"decl_id":null,"docs":" This function tries to transform a result to the string representation.\n Internally, It checks ret_code and returns either Some(Ok(stdout)) if it was SUCCESS_CODE\n or Some(Err(error)) otherwise. None is returned if stdout or stderr contains non valid\n UTF8 string.\n","sig":null,"attributes":[{"value":"/ This function tries to transform a result to the string representation.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8122,"byte_end":8197,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ Internally, It checks ret_code and returns either Some(Ok(stdout)) if it was SUCCESS_CODE","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8202,"byte_end":8295,"line_start":75,"line_end":75,"column_start":5,"column_end":98}},{"value":"/ or Some(Err(error)) otherwise. None is returned if stdout or stderr contains non valid","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8300,"byte_end":8390,"line_start":76,"line_end":76,"column_start":5,"column_end":95}},{"value":"/ UTF8 string.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8395,"byte_end":8411,"line_start":77,"line_end":77,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":9083,"byte_end":9089,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"as_std","qualname":"<MountedBinaryResult>::as_std","value":"pub fn as_std(&Self) -> Option<std::result::Result<String, String>>","parent":null,"children":[],"decl_id":null,"docs":" This function tries to represent a result as a string.\n Internally, It checks ret_code and returns either Some(Ok(stdout)) if it was SUCCESS_CODE\n or Some(Err(error)) otherwise. None is returned if stdout or stderr contains non valid\n UTF8 string.\n","sig":null,"attributes":[{"value":"/ This function tries to represent a result as a string.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8799,"byte_end":8857,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/ Internally, It checks ret_code and returns either Some(Ok(stdout)) if it was SUCCESS_CODE","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8862,"byte_end":8955,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ or Some(Err(error)) otherwise. None is returned if stdout or stderr contains non valid","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":8960,"byte_end":9050,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ UTF8 string.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":9055,"byte_end":9071,"line_start":91,"line_end":91,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":9481,"byte_end":9490,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"stringify","qualname":"<MountedBinaryResult>::stringify","value":"pub fn stringify(&Self) -> Option<MountedBinaryStringResult>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2952,"byte_end":2960,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82}],"decl_id":null,"docs":" These API functions are intended for internal usage in generated code.\n Normally, you shouldn't use them.\n","sig":null,"attributes":[{"value":"/ These API functions are intended for internal usage in generated code.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2831,"byte_end":2905,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ Normally, you shouldn't use them.","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/lib.rs","byte_start":2906,"byte_end":2943,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]}],"impls":[{"id":8,"kind":"Inherent","span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7629,"byte_end":7648,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/joera/.cargo/registry/src/github.com-1ecc6299db9ec823/marine-rs-sdk-0.6.11/src/mounted_binary.rs","byte_start":7629,"byte_end":7648,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}}]}